Syntax:
- File 
    = (KEYWORD["FUNCTION"] IDENTIFIER PARENTHESES["("] ((Parameter PUNCTUATION[","])* Parameter)? PARENTHESES[")"] (PUNCTUATION[":"] IDENTIFIER)? Scope)*
    
- Parameter
    = IDENTIFIER PUNCTUATION[":"] IDENTIFIER
    
- Scope 
    = PARENTHESES["{"] Statement* PARENTHESES["}"]
    
- Statement 
    = KEYWORD["LET"] IDENTIFIER OPERATOR["="] Expression
    / IDENTIFIER Assignment
    / KEYWORD["RETURN"] Expression

- Assignment
    = OPERATOR["="] Expression
    / OPERATOR["+="] Expression
    / OPERATOR["-="] Expression
    / OPERATOR["*="] Expression
    / OPERATOR["/="] Expression
    
- Expression 
    = Ternary

- Ternary
    = Equality (PUNCTUATION["?"] Expression PUNCTUATION[":"] Expression)?

- Equality
   = Additive ((OPERATOR["=="] / OPERATOR["!="] / OPERATOR[">"] / OPERATOR[">="] / OPERATOR["<"] / OPERATOR["<="]) Additive)*
    
- Additive 
    = Multiplicative ((OPERATOR["+"] / OPERATOR["-"]) Multiplicative)*
    
- Multiplicative 
    = Primary ((OPERATOR["*"] / OPERATOR["/"]) Primary)*
    
- Primary 
    = NUMBER 
    / IDENTIFIER 
    / PARENTHESES["("] Expression PARENTHESES[")"]
    / IDENTIFIER PARENTHESES["("] ((Expression PUNCTUATION[","])* Expression)? PARENTHESES[")"]

Tokens:
- NUMBER
- IDENTIFIER
- KEYWORD["LET", "FUNCTION", "RETURN"]
- OPERATOR["+", "-", "*", "/", "=", "+=", "-=", "*=", "/=", "==", "!=", ">", ">=", "<", "<="]
- PARENTHESES["(", ")", "{", "}"]
- PUNCTUATION[",", ":", "?"]